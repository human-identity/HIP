name: Deploy GitHub Pages Site

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          
      - name: Install xml2rfc
        run: pip install xml2rfc
      
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
        
      - name: Create build directory
        run: mkdir -p _site
      
      - name: Generate RFC HTML
        run: xml2rfc draft-hip-human-identity-protocol-00.xml --html -o _site/index.html
      
      - name: Generate RFC TXT
        run: xml2rfc draft-hip-human-identity-protocol-00.xml --text -o _site/draft-hip-human-identity-protocol-00.txt
        
      - name: Copy HIP logo
        run: cp human-identity-protocol.png _site/
        
      - name: Add favicon and GitHub corner
        run: |
          # Copy assets to the site
          cp assets/favicon.ico _site/
          
          # Add favicon link to head
          sed -i 's/<head>/<head>\n<link rel="icon" type="image\/x-icon" href="favicon.ico">/' _site/index.html
          
          # Read GitHub corner HTML snippet
          GITHUB_CORNER=$(cat assets/github-corner.html)
          
          # Escape special characters for sed
          GITHUB_CORNER_ESCAPED=$(echo "$GITHUB_CORNER" | sed 's/[\/&]/\\&/g')
          
          # Add GitHub corner HTML after body tag
          sed -i "s/<body class=\"xml2rfc\">/<body class=\"xml2rfc\">\n$GITHUB_CORNER_ESCAPED/" _site/index.html
        
      # Upload directly without creating a README
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "_site"

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
